// NMEC: 93019
// Lucas Sousa
#### ex 2.2

mongoimport --db cbd --collection rest --drop --file /Users/botto/Desktop/CBD/Lab-2/restaurants.json

#1
db.rest.find({}).pretty()

#2
db.rest.find( {}, { restaurant_id: 1, nome: 1, localidade: 1, gastronomia: 1 } )

#3
db.rest.find( {}, { _id: 0, restaurant_id: 1, localidade: 1, zipcode: 1 } ); 

#4
db.rest.find( { localidade: "Bronx" } ).count()

#5
db.rest.find( { localidade: "Bronx" } ).sort({nome:1}).limit(15)

#6
db.rest.find({ "grades.score": {$gt : 85}} )

#7
db.rest.find({ "grades.score": {$gt : 80, $lt :100}} )

#8
db.rest.find({ "address.coord.0": {$lt : -95.7}} )

#9
db.rest.find({ gastronomia: {$ne: "American"},"address.coord.0": {$lt: -65}, "grades.score": {$gt: 70} })

#10
db.rest.find({nome:/^Wil.*/}, {restaurant_id:1, nome:1, localidade:1, gastronomia:1})

#11
db.rest.find( { $or: [ { gastronomia: { $eq: "American" } }, {gastronomia: { $eq: "Chinese" } } ], localidade: {$eq : "Bronx"}}, { nome:1, localidade:1, gastronomia:1} )

#12
db.rest.find({localidade: {$in: ["Brooklyn", "Staten Island", "Queens"]}},{_id:0, restaurant_id:1, nome:1, localidade:1, gastronomia:1}).pretty()

#13 
db.rest.find({"grades" : {"$not": {"$elemMatch": {"score": {$nin: [0, 1, 2]}}}}} , { nome:1, localidade:1, "grades.score":1, gastronomia:1}).pretty()

#14
db.rest.find({grades : { $all: [{"$elemMatch" : { date :ISODate("2014-08-11T00:00:00Z"), grade:"A",score:10}}]}},{nome:1,grades:1,_id:0}).pretty()

#15
db.rest.find({$and: [{"grades.1.date" : ISODate("2014-08-11T00:00:00Z")}, {"grades.1.grade" : "A" }]}, {restaurant_id:1, nome:1, "grades.score":1}).pretty()

#16 
db.rest.find({"address.coord.1" : {"$gt":42, "$lt":52} }, {restaurant_id:1, nome:1, "address.coord":1, "address.rua":1})

#17
db.rest.find({}, {nome:1, localidade:1, gastronomia:1}).sort({gastronomia: 1}, {localidade:-1})

#18 
db.rest.find({localidade: "Brooklyn",gastronomia:{"$ne":"American"}, "grades.grade":"A"} , {nome:1, localidade:1, gastronomia:1, "grades.grade":1}).sort({gastronomia: -1}) 

#19
db.rest.aggregate({$group : { _id : '$localidade', count : {$sum : 1}}}).pretty()

#20 ??? 
db.rest.aggregate( [ { "$project": {_id : "$nome", average_score: { "$avg": "$grades.score" } } } , {$match : {average_score : {$gt : 30}}} ])

#21
db.rest.aggregate([{$addFields : { sum_score :  {$sum : '$grades.score'}}}, {$match : {sum_score: {$gt: 70}, gastronomia: 'American', 'address.coord.0': {$lt: -65}}}])

#22
db.rest.aggregate([{$group :{_id : '$gastronomia', count :{$sum :1}}}, {$sort : {count : -1}}]).pretty()

#23
db.rest.distinct('gastronomia',{ 'address.rua' : 'Flatbush Avenue' }).length

#24
db.rest.aggregate([{ $group : {_id : "$address.rua", total : {$sum : 1}}},{ $sort :{ total : -1 }}])

#25
Restaurantes na rua "Hillside Avenue"
db.rest.find({"address.rua":"Hillside Avenue"}, {_id:0, nome:1, localidade:1, gastronomia:1}).pretty()

#26
Numero de restaurantes por gastronomia, localidade e rua, por ordem decrescente
db.rest.aggregate([{ $group : { _id : "$gastronomia", localidade : {$first: '$localidade'}, rua: {$first: "$address.rua"}, total : {$sum : 1}}},{ $sort :{ total : -1 }}]).pretty()

#27
Procurar todos os restaurantes que são 'db.rest.aggregate([{ $group : { _id : "$gastronomia", total : {$sum : 1}}} ,{ $sort :{ total : -1 }}]).pretty()
miPub' ou 'Bar'
db.rest.find({$or : [ {nome:/.*Bar/}, {nome:/.*Pub/} ]}, {_id:0, nome:1, localidade:1, gastronomia:1}).pretty()

#28 
Restaurantes em Queens da gastronomia Delicatessen com pontuações maiores que 10
db.rest.find({$and : [ {localidade: "Queens"}, {gastronomia:"Delicatessen"}, {"grades": {"$elemMatch": {"score": {$gt: 10}}}} ]}, {_id:0, nome:1, localidade:1, gastronomia:1, grades:1}).pretty()

#29
Gastronomia mais frequente
db.rest.aggregate([{ $group : { _id : "$gastronomia", total : {$sum : 1}}} ,{ $sort :{ total : -1 }}, { $sort :{ total : -1 }}, { $limit :1 }]).pretty()

#30
Zipcodes que começam por 1
db.rest.aggregate([ {$match : {"address.zipcode" : {$regex : "1.*"}}} ]).pretty()